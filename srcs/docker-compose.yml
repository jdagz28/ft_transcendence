services:
  nginx:
    container_name: nginx
    build: ./nginx
    image: nginx:transcendence
    ports:
      - 4242:443
    depends_on:
      - authentication
      - usermanagement
    env_file:
      - .env
    networks:
      - transcendence
    restart: always
    profiles:
      - frontend
      - backend
      - development
  
  authentication:
    container_name: authentication
    build: ./authentication
    image: authentication:fastify
    depends_on:
      - database
    environment:
      - PORT=${AUTH_PORT}
    env_file:
      - .env
    networks:
      - transcendence
    restart: always
    profiles:
      - authentication
      - backend
      - development

  database:
    container_name: database
    build: ./database
    image: database:sqlite
    volumes:
      - db-sqlite:/data/sqlite:rw,z
    environment:
      - PORT=${DB_PORT}
    env_file:
      - .env
    networks:
      - transcendence
    restart: always
    profiles:
      - authentication
      - backend
      - development
  usermanagement:
    container_name: user_management
    build: ./user_management
    image: user_management:fastify
    depends_on:
      - database
    environment:
      - PORT=${USER_PORT}
    env_file:
      - .env
    networks:
      - transcendence
    restart: always
    profiles:
      - authentication
      - backend
      - development

  games:
    container_name: games
    build: ./games
    image: games:fastify
    depends_on:
      - database
    environment:
      - PORT=${GAMES_PORT}
    env_file:
      - .env
    networks:
      - transcendence
    restart: always
    profiles:
      - game
      - backend
      - development
      
  frontend:
    container_name: frontend
    build: ./frontend
    image: frontend:typescript
    command: ["npm", "run", "build"]
    volumes:
      - frontend_dist:/app/dist
    networks:
      - transcendence
    profiles:
      - build
  
  backend:
    container_name: backend
    build: ./backend
    image: backend:typescript
    volumes:
      - frontend_dist:/app/dist
    environment:
      - PORT=${BACKEND_PORT}
    networks:
      - transcendence
    profiles:
      - build

  gamestate:
    container_name: gamestate
    build: ./gamestate
    image: gamestate:fastify
    depends_on:
      - database
    environment:
      - PORT=${GAMESTATE_PORT}
    env_file:
      - .env
    networks:
      - transcendence
    restart: always
    profiles:
      - game
      - backend
      - development

volumes:
  db-sqlite:
    driver: local
    driver_opts:
      type: none
      device: ../data/ft_transcendence/sqlite
      o: bind
  frontend_dist:
    driver: local
    driver_opts:
      type: none
      device: ../data/ft_transcendence/frontend
      o: bind

networks:
  transcendence:
    driver: bridge
    name: transcendence
